import { Injectable } from "@angular/core";
import { HttpClient } from "@angular/common/http";


@Injectable()
export class RuleBuilderService {

    constructor(private httpClient : HttpClient) {

    }


    public getRuleBuilder() {
       let obj = 
           {"measures":[{"name":"roamingcallcount","alias":"Roaming Call Counts","formula":"LongCountMeasurUDF(LongCountMeasureUDAF($CASE))"},{"name":"domesticcallcount","alias":"Domestic Call Count","formula":"LongCountMeasurUDF(LongCountMeasureUDAF($CASE))"},{"name":"roamingmou","alias":"Roaming MoU","formula":"DoubleSumMeasureUDF(DoubleSumMeasureUDAF($CASE))"},{"name":"domesticmou","alias":"Domestic MoU","formula":"DoubleSumMeasureUDF(DoubleSumMeasureUDAF($CASE))"},{"name":"domesticzerodurationcalls","alias":"Domestic Zero Duration Calls","formula":"LongCountMeasureUDF(LongCountMeasureUDAF($CASE))"},{"name":"domesticnetworkdisconnectedcalls","alias":"Domestic Network Disconnected Calls","formula":"LongCountMeasurUDF(LongCountMeasureUDAF($CASE))"},{"name":"activehours","alias":"Active Hours","formula":"LongCountMeasurUDF(LongCountMeasureUDAF($CASE))"},{"name":"downlinkdatausage","alias":"Downlink Data Usage","formula":"LongCountMeasurUDF(LongCountMeasureUDAF($CASE))"},{"name":"smscount","alias":"smscount","formula":"LongCountMeasurUDF(LongCountMeasureUDAF($CASE))"},{"name":"domesticsamedurationringingtime","alias":"Domestic Calls Count 0-2 Seconds","formula":"DurationDistributionMeasureUDF0_2(DurationDistributionMeasureUDF($CASE))"},{"name":"domesticsamedurationringingtime","alias":"Domestic Calls Count 3-5 Seconds","formula":"DurationDistributionMeasureUDF3_4(DurationDistributionMeasureUDF($CASE))"}],"filters":[{"name":"eventtype","alias":"call Category","value":"0,1,2,3","valuealias":"Mo,Mt,ForwardMo,ForwardMt","type":"byte"},{"name":"traffictype","alias":"Call Direction","value":"0,7","valuealias":"domestic,ild","type":"integer"},{"name":"connectedcountry","alias":"offNet ILD Country Risk","value":"300,301,302,303,304,305,522,618,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,619,327,328,329,330,436,331,332,333,334,335,336,337,338,339,340,620,621,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,423,362,363,364,365,521,366,625,368,369,529,370,371,372,374,375,376,377,367,378,379,628,380,381,382,383,629,630,384,385,386,387,388,389,391,392,393,631,394,395,396,397,398,632,399,400,401,402,634,403,404,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,635,424,425,426,637,427,428,429,430,431,432,433,434,435,437,438,439,440,441,442,443,444,445,446,613,528,447,448,449,450,451,452,453,454,455,456,457,640,458,459,460,461,462,463,464,641,526,465,466,643,467,468,469,523,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,644,488,489,490,491,492,493,494,495,496,497,645,498,499,500,501,502,503,506,507,504,509,510,511,505,512,513,514,515,516,648,517,518,519,530,405,390,524,1001,1002,527,651,649,624,608,627,650,636,532,626,1003,1004,1005,1006,1007,1008,1009","valuealias":"Afghanistan,Albania,Algeria,American Samoa,Andorra,Angola,Anguilla,Antarctica,Antigua and Barbuda,Argentina,Armenia,Aruba,Australia,Austria,Azerbaijan,Bahamas,Bahrain,Bangladesh,Barbados,Belarus,Belgium,Belize,Benin,Bermuda,Bhutan,Bolivia,Bosnia and Herzegovina,Botswana,Brazil,British Indian Ocean Territory,British Virgin Islands,Brunei,Bulgaria,Burkina Faso,Burma (Myanmar),Burundi,Cambodia,Cameroon,Canada,Cape Verde,Cayman Islands,Central African Republic,Chad,Chile,China,Christmas Island,Cocos Keeling Islands,Colombia,Comoros,Congo,Cook Islands,Costa Rica,Croatia,Cuba,Cyprus,Czech Rep.,Dem. Rep. of the Congo,Denmark,Djibouti,Dominica,Dominican Rep.,Ecuador,Egypt,El Salvador,Equatorial Guinea,Eritrea,Estonia,Ethiopia,Falkland Islands,Faroe Islands,Fiji,Finland,France,French Guiana,French Polynesia,French Southern and Antarctic Lands,Gabon,Gambia,State of Palestine,Georgia,Germany,Ghana,Gibraltar,Greece,Greenland,Grenada,Guadeloupe,Guam,Guatemala,Guernsey,Guinea,Guinea-Bissau,Guyana,Haiti,Heard Island and McDonald Islands,Holy See Vatican City,Honduras,Hong Kong China,Hungary,Iceland,India,Indonesia,Iran,Iraq,Ireland,Isle of Man,Israel,Italy,Ivory Coast,Jamaica,Japan,Jersey,Jordan,Kazakhstan,Kenya,Kiribati,Kosovo,Kuwait,Kyrgyzstan,Laos,Latvia,Lebanon,Lesotho,Liberia,Libya,Liechtenstein,Lithuania,Luxembourg,Macao China,The Former Yugoslav Republic of Macedonia,Madagascar,Malawi,Malaysia,Maldives,Mali,Malta,Marshall Islands,Martinique,Mauritania,Mauritius,Mayotte,Mexico,Micronesia,Moldova (Republic of),Monaco,Mongolia,Montenegro,Montserrat (UK),Morocco,Mozambique,Namibia,Nauru,Nepal,Netherlands,Netherlands Antilles,New Caledonia,New Zealand,Nicaragua,Niger,Nigeria,Niue,Norfolk Island,North Korea,Northern Mariana Islands,Norway,Oman,Pakistan,Palau,Panama,Papua New Guinea,Paraguay,Peru,Philippines,Pitcairn Islands,Poland,Portugal,Puerto Rico,Qatar,Romania,Russian Federation,Rwanda,Saint Barthelemy,Saint Helena,Saint Kitts and Nevis,Saint Lucia,Saint Martin,Saint Vincent and the Grenadines,Samoa,San Marino,Sao Tome and Principe,Saudi Arabia,Senegal,Serbia,Seychelles,Sierra Leone,Singapore,Slovakia,Slovenia,Solomon Islands,Somalia,South Africa,Korea (Rep. of),Spain,Sri Lanka,St Pierre & Miquelon,Sudan,Suriname,Svalbard,Swaziland,Sweden,Switzerland,Syrian Arab Republic,Taiwan,Tajikistan,Tanzania,Thailand,Timor,Togo,Tokelau,Tonga,Trinidad and Tobago,Tunisia,Turkey,Turkmenistan,Turks and Caicos Islands,Uganda,Ukraine,United Arab Emirates,United Kingdom,United States,Uruguay,US Virgin Islands,Uzbekistan,Vanuatu,Venezuela (Bolivarian Republic of),Vietnam,Wallis and Futuna,Western Sahara,Yemen,Zambia,Zimbabwe,South Sudan (Republic of),La Reunion,International Mobile shared code,Abkhazia,Sint Maarten,Bonaire,Diego Garcia,Switzerland,South Sudan,Guyane,Saint Martin,Palestine,Reunion,Martinique,Tuvalu,Guam,Ascension,Curacao,Inmarsat SNAC,Global Mobile Satellite System,International VoIP,Universal Personal Telecommunications,International Networks","type":"integer"},{"name":"cellid","alias":"cellid's","value":"35361,58092,1621,13873,48031,46152,14242,10761,14241,58701,21102,39292,1102,1003,35363,48491,40603,22913,38511","valuealias":" 35361,58092,1621,13873,48031,46152,14242,10761,14241,58701,21102,39292,1102,1003,35363,48491,40603,22913,38511","type":"integer"},{"name":"paymenttype","alias":"payment Type","value":"1,2","valuealias":"Prepaid,Postpaid","type":"integer"},{"name":"disconnectingParty","alias":"Call DisconnectedBy","value":"0,1,2","valuealias":"A-Party,B-Party,Network","type":"byte"},{"name":"connectedconfidencelevel","alias":"offNet ILD NumRisk","value":"1,2,3","valuealias":"Low,Medium, High","type":"integer"},{"name":"connectedIshighriskcountry","alias":"offNet ILD Country Risk","value":"0,1","valuealias":"Low,High","type":"integer"},{"name":"callstatus","alias":"Call status","value":"0,1","valuealias":"Success,Failuer","type":"integer"}],"evaluatedOver":[{"duration":"7 day","columnname":"basecubebintime"},{"duration":"1 day","columnname":"basecubebintime"},{"duration":"12 hours","columnname":"basecubebintime"},{"duration":"6 hours","columnname":"basecubebintime"},{"duration":"1 hour","columnname":"basecubebintime"},{"duration":"30 minutes","columnname":"basecubebintime"},{"duration":"15 minutes","columnname":"basecubebintime"},{"duration":"5 minutes","columnname":"basecubebintime"},{"duration":"1 minute","columnname":"basecubebintime"}]};
           return obj;
    }

}